/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DocRouteImport } from './routes/doc/route'
import { Route as RouteImport } from './routes/route'
import { Route as DocIndexImport } from './routes/doc/index'
import { Route as DocArithmeticImport } from './routes/doc/arithmetic'

// Create/Update Routes

const DocRouteRoute = DocRouteImport.update({
  id: '/doc',
  path: '/doc',
  getParentRoute: () => rootRoute,
} as any)

const RouteRoute = RouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DocIndexRoute = DocIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DocRouteRoute,
} as any)

const DocArithmeticRoute = DocArithmeticImport.update({
  id: '/arithmetic',
  path: '/arithmetic',
  getParentRoute: () => DocRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof RouteImport
      parentRoute: typeof rootRoute
    }
    '/doc': {
      id: '/doc'
      path: '/doc'
      fullPath: '/doc'
      preLoaderRoute: typeof DocRouteImport
      parentRoute: typeof rootRoute
    }
    '/doc/arithmetic': {
      id: '/doc/arithmetic'
      path: '/arithmetic'
      fullPath: '/doc/arithmetic'
      preLoaderRoute: typeof DocArithmeticImport
      parentRoute: typeof DocRouteImport
    }
    '/doc/': {
      id: '/doc/'
      path: '/'
      fullPath: '/doc/'
      preLoaderRoute: typeof DocIndexImport
      parentRoute: typeof DocRouteImport
    }
  }
}

// Create and export the route tree

interface DocRouteRouteChildren {
  DocArithmeticRoute: typeof DocArithmeticRoute
  DocIndexRoute: typeof DocIndexRoute
}

const DocRouteRouteChildren: DocRouteRouteChildren = {
  DocArithmeticRoute: DocArithmeticRoute,
  DocIndexRoute: DocIndexRoute,
}

const DocRouteRouteWithChildren = DocRouteRoute._addFileChildren(
  DocRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof RouteRoute
  '/doc': typeof DocRouteRouteWithChildren
  '/doc/arithmetic': typeof DocArithmeticRoute
  '/doc/': typeof DocIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof RouteRoute
  '/doc/arithmetic': typeof DocArithmeticRoute
  '/doc': typeof DocIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof RouteRoute
  '/doc': typeof DocRouteRouteWithChildren
  '/doc/arithmetic': typeof DocArithmeticRoute
  '/doc/': typeof DocIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/doc' | '/doc/arithmetic' | '/doc/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/doc/arithmetic' | '/doc'
  id: '__root__' | '/' | '/doc' | '/doc/arithmetic' | '/doc/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  RouteRoute: typeof RouteRoute
  DocRouteRoute: typeof DocRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  RouteRoute: RouteRoute,
  DocRouteRoute: DocRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/doc"
      ]
    },
    "/": {
      "filePath": "route.tsx"
    },
    "/doc": {
      "filePath": "doc/route.tsx",
      "children": [
        "/doc/arithmetic",
        "/doc/"
      ]
    },
    "/doc/arithmetic": {
      "filePath": "doc/arithmetic.tsx",
      "parent": "/doc"
    },
    "/doc/": {
      "filePath": "doc/index.tsx",
      "parent": "/doc"
    }
  }
}
ROUTE_MANIFEST_END */
