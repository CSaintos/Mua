# release.yml

name: Release Mua

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  pull_request_target:
    branches:
      - main
    types:
      - closed
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false

# permissions:
#  contents: read

jobs:
  tmate:
    name: Action tmate session
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
      timeout-minutes: 15
  test-make-linux:
    name: Test Build Mua - Linux
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      working-directory: .
      run: make -j -O SYS=Linux
  test-make-windows:
    name: Test Build Mua - Windows
    runs-on: windows-latest
    if: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      shell: pwsh
      working-directory: .
      run: make -j -O SYS=Linux
  test-make-macos:
    name: Test Build Mua - MacOS
    runs-on: macos-latest
    if: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      working-directory: .
      run: make -j SYS=OSX CXX_VERSION=c++20
  make-linux:
    name: Build Mua - Linux
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' && github.event.pull_request.merged == true || github.event_name == 'push' && github.ref_name == 'main'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      working-directory: .
      run: make -j -O SYS=Linux
    - name: Upload muac-linux
      uses: actions/upload-artifact@v4
      with:
        name: muac-linux
        path: build/mua/main
  make-windows:
    name: Build Mua - Windows
    runs-on: windows-latest
    if: ${{ github.event_name != 'workflow_dispatch' && github.event.pull_request.merged == true || github.event_name == 'push' && github.ref_name == 'main'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      shell: pwsh
      working-directory: .
      run: make -j -O SYS=Linux
    - name: Upload muac-windows
      uses: actions/upload-artifact@v4
      with:
        name: muac-windows
        path: build/mua/main
  make-macos:
    name: Build Mua - MacOS
    runs-on: macos-latest
    if: ${{ github.event_name != 'workflow_dispatch' && github.event.pull_request.merged == true || github.event_name == 'push' && github.ref_name == 'main'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      working-directory: .
      run: |
        make -j SYS=OSX CXX_VERSION=c++20
    - name: Upload muac-macos
      uses: actions/upload-artifact@v4
      with:
        name: muac-macos
        path: build/mua/main
  release-mua:
    name: Create Mua release
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' && github.event.pull_request.merged == true || github.event_name == 'push' && github.ref_name == 'main'}}
    needs: [make-linux, make-windows, make-macos]
    env:
      GH_REPO: ${{ github.repository }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Download Mua artifacts
      uses: actions/download-artifact@v4
    - name: Compress Mua artifacts
      run: |
        7z a muac-linux.7z muac-linux
        7z a muac-windows.7z muac-windows
        7z a muac-macos.7z muac-macos
    - name: Generate Checksums
      run: |
        sha256sum muac-linux.7z > muac-linux.7z.sha256sum
        echo "SHA_MUAC_LINUX_7Z=$(cat muac-linux.7z.sha256sum)" >> $GITHUB_ENV
        sha256sum muac-windows.7z > muac-windows.7z.sha256sum
        echo "SHA_MUAC_WINDOWS_7Z=$(cat muac-windows.7z.sha256sum)" >> $GITHUB_ENV
        sha256sum muac-macos.7z > muac-macos.7z.sha256sum
        echo "SHA_MUAC_MACOS_7Z=$(cat muac-macos.7z.sha256sum)" >> $GITHUB_ENV
    - name: Display structure of downloaded artifacts
      run: ls -R
    - name: Create Release
      run: |
        gh release create 0.2.0-alpha -t "Mua 0.2.0-alpha" muac-linux.7z muac-linux.7z.sha256sum muac-windows.7z muac-windows.7z.sha256sum muac-macos.7z muac-macos.7z.sha256sum

