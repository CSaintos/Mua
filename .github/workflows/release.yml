# release.yml

name: Release Mua

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  pull_request_target:
    branches:
      - main
    types:
      - closed
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false

# permissions:
#  contents: read

jobs:
  tmate:
    name: Action tmate session
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
      timeout-minutes: 15
  test-make-linux-x64:
    name: Test Build Mua - Linux x64
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      working-directory: .
      run: make -j -O SYS=Linux
  test-make-windows-x64:
    name: Test Build Mua - Windows x64
    runs-on: windows-latest
    if: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      shell: pwsh
      working-directory: .
      run: make -j -O SYS=Windows FILESYS=Linux
  test-make-macos-x64:
    name: Test Build Mua - MacOS x64
    runs-on: macos-13
    if: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      working-directory: .
      run: make -j SYS=OSX CXX_VERSION=c++20
  test-make-linux-arm64:
    name: Test Build Mua - Linux arm64
    runs-on: ubuntu-24.04-arm
    if: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      working-directory: .
      run: make -j -O SYS=Linux
  test-make-windows-arm64:
    name: Test Build Mua - Windows arm64
    runs-on: windows-11-arm
    if: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      working-directory: .
      run: make -j -O SYS=Windows FILESYS=Linux
  test-make-macos-arm64:
    name: Test Build Mua - MacOS arm64
    runs-on: macos-latest
    if: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      working-directory: .
      run: make -j SYS=OSX CXX_VERSION=c++20
  make-linux-x64:
    name: Build Mua - Linux x64
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' && github.event.pull_request.merged == true || github.event_name == 'push' && github.ref_name == 'main'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      working-directory: .
      run: make -j -O SYS=Linux
    - name: Upload muac-linux-x64
      uses: actions/upload-artifact@v4
      with:
        name: muac-linux-x64
        path: build/mua/main
  make-windows-x64:
    name: Build Mua - Windows x64
    runs-on: windows-latest
    if: ${{ github.event_name != 'workflow_dispatch' && github.event.pull_request.merged == true || github.event_name == 'push' && github.ref_name == 'main'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      shell: pwsh
      working-directory: .
      run: make -j -O SYS=Windows FILESYS=Linux
    - name: Upload muac-windows-x64
      uses: actions/upload-artifact@v4
      with:
        name: muac-windows-x64
        path: build/mua/main
  make-macos-x64:
    name: Build Mua - MacOS x64
    runs-on: macos-13
    if: ${{ github.event_name != 'workflow_dispatch' && github.event.pull_request.merged == true || github.event_name == 'push' && github.ref_name == 'main'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      working-directory: .
      run: |
        make -j SYS=OSX CXX_VERSION=c++20
        chmod 777 build/mua/main/base_node.dylib
        chmod 777 build/mua/main/character.dylib
        chmod 777 build/mua/main/cmd.dylib
        chmod 777 build/mua/main/definer.dylib
        chmod 777 build/mua/main/error.dylib
        chmod 777 build/mua/main/interpreter.dylib
        chmod 777 build/mua/main/lexer.dylib
        chmod 777 build/mua/main/muac
        chmod 777 build/mua/main/node_factory.dylib
        chmod 777 build/mua/main/node_state.dylib
        chmod 777 build/mua/main/parser.dylib
        chmod 777 build/mua/main/reader.dylib
        chmod 777 build/mua/main/token.dylib
        chmod 777 build/mua/main/trie.dylib
        chmod 777 build/mua/main/writer.dylib
    - name: Upload muac-macos-x64
      uses: actions/upload-artifact@v4
      with:
        name: muac-macos-x64
        path: build/mua/main
  make-linux-arm64:
    name: Build Mua - Linux arm64
    runs-on: ubuntu-24.04-arm
    if: ${{ github.event_name != 'workflow_dispatch' && github.event.pull_request.merged == true || github.event_name == 'push' && github.ref_name == 'main'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      working-directory: .
      run: |
        make -j SYS=Linux
    - name: Upload muac-linux-arm64
      uses: actions/upload-artifact@v4
      with:
        name: muac-linux-arm64
        path: build/mua/main
  make-windows-arm64:
    name: Build Mua - Windows arm64
    runs-on: windows-11-arm
    if: ${{ github.event_name != 'workflow_dispatch' && github.event.pull_request.merged == true || github.event_name == 'push' && github.ref_name == 'main'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      working-directory: .
      run: |
        make -j -O SYS=Windows FILESYS=Linux
    - name: Upload muac-windows-arm64
      uses: actions/upload-artifact@v4
      with:
        name: muac-windows-arm64
        path: build/mua/main
  make-macos-arm64:
    name: Build Mua - MacOS arm64
    runs-on: macos-latest
    if: ${{ github.event_name != 'workflow_dispatch' && github.event.pull_request.merged == true || github.event_name == 'push' && github.ref_name == 'main'}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: make muac
      working-directory: .
      run: |
        make -j SYS=OSX CXX_VERSION=c++20
        chmod 777 build/mua/main/base_node.dylib
        chmod 777 build/mua/main/character.dylib
        chmod 777 build/mua/main/cmd.dylib
        chmod 777 build/mua/main/definer.dylib
        chmod 777 build/mua/main/error.dylib
        chmod 777 build/mua/main/interpreter.dylib
        chmod 777 build/mua/main/lexer.dylib
        chmod 777 build/mua/main/muac
        chmod 777 build/mua/main/node_factory.dylib
        chmod 777 build/mua/main/node_state.dylib
        chmod 777 build/mua/main/parser.dylib
        chmod 777 build/mua/main/reader.dylib
        chmod 777 build/mua/main/token.dylib
        chmod 777 build/mua/main/trie.dylib
        chmod 777 build/mua/main/writer.dylib
    - uses: actions/upload-artifact@v4
      with:
        name: muac-macos-arm64
        path: build/mua/main
  release-mua:
    name: Create Mua release
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' && github.event.pull_request.merged == true || github.event_name == 'push' && github.ref_name == 'main'}}
    needs: [make-linux-x64, make-windows-x64, make-macos-x64, make-linux-arm64, make-windows-arm64, make-macos-arm64]
    env:
      GH_REPO: ${{ github.repository }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Download Mua artifacts
      uses: actions/download-artifact@v4
    - name: Compress Mua artifacts
      run: |
        7z a muac-linux-x64.7z muac-linux-x64
        7z a muac-windows-x64.7z muac-windows-x64
        7z a muac-macos-x64.7z muac-macos-x64
        7z a muac-linux-arm64.7z muac-linux-arm64
        7z a muac-windows-arm64.7z muac-windows-arm64
        7z a muac-macos-arm64.7z muac-macos-arm64
    - name: Generate Checksums
      run: |
        sha256sum muac-linux-x64.7z > muac-linux-x64.7z.sha256sum
        echo "SHA_MUAC_LINUX_X64_7Z=$(cat muac-linux-x64.7z.sha256sum)" >> $GITHUB_ENV
        sha256sum muac-windows-x64.7z > muac-windows-x64.7z.sha256sum
        echo "SHA_MUAC_WINDOWS_X64_7Z=$(cat muac-windows-x64.7z.sha256sum)" >> $GITHUB_ENV
        sha256sum muac-macos-x64.7z > muac-macos-x64.7z.sha256sum
        echo "SHA_MUAC_MACOS_X64_7Z=$(cat muac-macos-x64.7z.sha256sum)" >> $GITHUB_ENV
        sha256sum muac-linux-arm64.7z > muac-linux-arm64.7z.sha256sum
        echo "SHA_MUAC_LINUX_ARM64_7Z=$(cat muac-linux-arm64.7z.sha256sum)" >> $GITHUB_ENV
        sha256sum muac-windows-arm64.7z > muac-windows-arm64.7z.sha256sum
        echo "SHA_MUAC_WINDOWS_ARM64_7Z=$(cat muac-windows-arm64.7z.sha256sum)" >> $GITHUB_ENV
        sha256sum muac-macos-arm64.7z > muac-macos-arm64.7z.sha256sum
        echo "SHA_MUAC_MACOS_ARM64_7Z=$(cat muac-macos-arm64.7z.sha256sum)" >> $GITHUB_ENV
    - name: Display structure of downloaded artifacts
      run: ls -R
    - name: Create Release
      run: |
        gh release create -d 0.2.2-alpha -t "Mua 0.2.2-alpha" muac-linux-x64.7z muac-linux-x64.7z.sha256sum muac-windows-x64.7z muac-windows-x64.7z.sha256sum muac-macos-x64.7z muac-macos-x64.7z.sha256sum muac-linux-arm64.7z muac-linux-arm64.7z.sha256sum muac-windows-arm64.7z muac-windows-arm64.7z.sha256sum muac-macos-arm64.7z muac-macos-arm64.7z.sha256sum

